/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * SplitJDialog.java
 *
 * Created on 10/05/2009, 11:27:56 PM
 */

package webcurve.ui;

import java.util.Vector;

import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

import webcurve.client.ClientOrder;

/**
 * @author dennis_d_chen@yahoo.com
 */
@SuppressWarnings("serial")
public class SplitJDialog extends javax.swing.JDialog {
    private static Logger log = LoggerFactory.getLogger(SplitJDialog.class);
	
	protected Vector<ClientOrder> childOrders;
	protected boolean ok = false;

    /** Creates new form SplitJDialog */
    public SplitJDialog(Vector<ClientOrder> clientOrders, java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        tbOrders.putClientProperty("terminateEditOnFocusLost", Boolean.TRUE);
        this.childOrders = clientOrders;
        loadOrders();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        edPercentage = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tbOrders = new javax.swing.JTable();
        jPanel3 = new javax.swing.JPanel();
        btOK = new javax.swing.JButton();
        btCancel = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jPanel1.setPreferredSize(new java.awt.Dimension(400, 30));
        jPanel1.setLayout(new java.awt.GridLayout(1, 0));
        jPanel1.add(jLabel2);
        jPanel1.add(jLabel3);

        edPercentage.setHorizontalAlignment(javax.swing.JTextField.TRAILING);
        edPercentage.setText("100");
        edPercentage.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                edPercentageFocusLost(evt);
            }
        });
        jPanel1.add(edPercentage);

        jLabel1.setText("%");
        jPanel1.add(jLabel1);

        getContentPane().add(jPanel1, java.awt.BorderLayout.NORTH);

        jPanel2.setPreferredSize(new java.awt.Dimension(400, 300));
        jPanel2.setLayout(new java.awt.BorderLayout());

        tbOrders.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Order ID", "Stock", "Side", "Price", "Quantity"
            }
        ) {
			private static final long serialVersionUID = 1L;
			@SuppressWarnings("rawtypes")
			Class[] types = new Class [] {
                java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Double.class, java.lang.Integer.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, true, true
            };

			@SuppressWarnings("rawtypes")
			public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tbOrders);

        jPanel2.add(jScrollPane1, java.awt.BorderLayout.CENTER);

        getContentPane().add(jPanel2, java.awt.BorderLayout.CENTER);

        jPanel3.setPreferredSize(new java.awt.Dimension(400, 30));
        jPanel3.setRequestFocusEnabled(false);
        jPanel3.setLayout(new java.awt.GridLayout(1, 0));

        btOK.setText("OK");
        btOK.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btOKActionPerformed(evt);
            }
        });
        jPanel3.add(btOK);

        btCancel.setText("Cancel");
        btCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btCancelActionPerformed(evt);
            }
        });
        jPanel3.add(btCancel);

        getContentPane().add(jPanel3, java.awt.BorderLayout.SOUTH);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void loadOrders()
    {
        DefaultTableModel model = (DefaultTableModel)tbOrders.getModel();
        model.setRowCount(0);
        for (ClientOrder order: childOrders)
        {
            model.addRow( new Object[]{order.getClientOrderID(),
                                       order.getCode(),
                                       ClientOrder.sideToString(order.getSide(), order.isShortSell()),
                                       order.getPrice(),
                                       order.getQuantity()
                });
        }    	
    }
    
    private void btOKActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btOKActionPerformed
    	ok = true;
    	for (int i=0; i<childOrders.size(); i++)
    	{
    		ClientOrder order = childOrders.get(i);
    		order.setPrice((Double)tbOrders.getValueAt(i, 3));
    		Integer qty = (Integer)tbOrders.getValueAt(i, 4);
    		if ( qty > order.getQuantity())
    		{
    			JOptionPane.showMessageDialog(this, "Row " + i + " exceeds allowed quantity"); 
    			return;
    		}
    		order.setQuantity(qty);
    		
    		log.info("Price: " + order.getPrice() + ", Quantity: " + order.getQuantity());
    	}
        this.setVisible(false);
}//GEN-LAST:event_btOKActionPerformed

    private void btCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btCancelActionPerformed
    	ok = false;
        this.setVisible(false);
}//GEN-LAST:event_btCancelActionPerformed

    private void edPercentageFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_edPercentageFocusLost
        Integer percent = Integer.parseInt(edPercentage.getText());
    	for (int i=0; i<childOrders.size(); i++)
    	{
    		ClientOrder order = childOrders.get(i);
    		tbOrders.setValueAt(order.getQuantity() * percent / 100, i, 4);
        }
        //loadOrders();
    }//GEN-LAST:event_edPercentageFocusLost


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btCancel;
    private javax.swing.JButton btOK;
    private javax.swing.JTextField edPercentage;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tbOrders;
    // End of variables declaration//GEN-END:variables

}
